import telebot
from telebot import types
from time import sleep
import sqlite3

bot = telebot.TeleBot('5818550349:AAF4vY8XTiogETFKsVoMZgvsjnv6Unxdj4g')

command = {
        'toxic': "–û–±–∑–æ–≤–∏ –º–µ–Ω—è",
        'id': "–î–∞–π id",
        'photo': "–î–∞–π —Ñ–æ—Ç–æ",
        'home': "üëà –ù–∞ –≥–ª–∞–≤–Ω—É—é",
        'base': "–ó–∞–ø–∏—à–∏ –º–µ–Ω—è –≤ –±–∞–∑—É",
    }

toxic_list = {
        'lox': "–ª–æ—Ö",
        'chert': "—á–º–æ",
        'chmo': "—á—ë—Ä—Ç",
    }


@bot.message_handler(commands=['startbase'])
@bot.message_handler(func=lambda message: message.text == command['base'])
def start(message):
    name = bot.send_message(message.chat.id, "–ö–∞–∫ —Ç–µ–±—è –∑–∞–ø–∏—Å–∞—Ç—å?")
    bot.register_next_step_handler(name, nickname)


def nickname(message):
    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS login_name(
        name INTEGER    
    )""")
    connect.commit()
    user_name = [message.text]
    cursor.execute("INSERT INTO login_name VALUES(?);", user_name)
    connect.commit()
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –∑–∞–ø–∏—Å–∞–ª!')


@bot.message_handler(commands=['start'])
@bot.message_handler(func=lambda message: message.text == command['home'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üåö –°–æ–∑–¥–∞–π –∏–ª–ª—é–∑–∏—é')
    btn2 = types.KeyboardButton('ü§ô –ó–∞—á–∏—Ç–∞–π —Ä–µ–ø')
    btn3 = types.KeyboardButton('üòÇ –†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç')
    btn4 = types.KeyboardButton('üíä –û—Ç–∫—Ä–æ–π –º–µ–Ω—é –ø–æ–º–æ—â–∏')
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫! –ß—Ç–æ –º–Ω–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=markup)


@bot.message_handler(commands=['help'])
@bot.message_handler(func=lambda message: message.text == 'üíä –û—Ç–∫—Ä–æ–π –º–µ–Ω—é –ø–æ–º–æ—â–∏')
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton(f'{command["toxic"]}')
    btn2 = types.KeyboardButton(f'{command["id"]}')
    btn3 = types.KeyboardButton(f'{command["photo"]}')
    btn4 = types.KeyboardButton(f'{command["home"]}')
    btn5 = types.KeyboardButton(f'{command["base"]}')
    markup.add(btn1, btn2, btn3, btn4, btn5)
    command_list = '\n'.join(list(command.values()))
    n = '\n'
    bot.send_message(message.from_user.id, f"–ß—Ç–æ –≤—ã–±–∏—Ä–∏—Ç–µ: {n}{command_list}", reply_markup=markup)


@bot.message_handler(commands=['toxic'])
@bot.message_handler(func=lambda message: message.text == command['toxic'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton(f'{toxic_list["lox"]}')
    btn2 = types.KeyboardButton(f'{toxic_list["chert"]}')
    btn3 = types.KeyboardButton(f'{toxic_list["chmo"]}')
    btn4 = types.KeyboardButton(f'{command["home"]}')
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.from_user.id, f"–ö–∞–∫ —Ç–µ–±—è –æ–±–æ–∑–≤–∞—Ç—å?", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def botText(message):
    if message.text == "üåö –°–æ–∑–¥–∞–π –∏–ª–ª—é–∑–∏—é":
        for i in range(10):
            bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}.–≠—Ç–æ —è, —Ç–≤–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∑—Ä–∏—Ç–µ–ª—å."
                                              "–ù–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –º–Ω–æ–≥–∏—Ö –ª–µ—Ç —è —Å–æ–∑–¥–∞–≤–∞–ª "
                                              "–∏–ª–ª—é–∑–∏—é —Ç–æ–≥–æ, —á—Ç–æ —Ç–≤–æ–∏ —Å—Ç—Ä–∏–º—ã —Å–º–æ—Ç—Ä—è—Ç –º–Ω–æ–≥–æ –ª—é–¥–µ–π. –ù–æ —ç—Ç–æ –±—ã–ª —è. "
                                              "–°–µ–π—á–∞—Å –Ω–∞–ø–∏—à—É —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤.")
            sleep(0.5)

    elif message.text == 'ü§ô –ó–∞—á–∏—Ç–∞–π —Ä–µ–ø':
        bot.send_message(message.from_user.id, "–ö–æ–ª—è, –∫–æ–ª—è, —Ç—Ä*—Ö–Ω–∏ –º–µ–Ω—è\n"
                                               "–ö–æ–ª—è, –∫–æ–ª—è, —Ç—Ä*—Ö–Ω–∏ –º–µ–Ω—è, –ö–æ–ª—è\n"
                                               "–¢—ã –º–æ—è –≤—Å–µ–ª–µ–Ω–Ω–∞—è, —è –Ω–µ –º–æ–≥—É –±–µ–∑ —Ç–µ–±—è\n"
                                               "–ö–æ–ª—è, –∫–æ–ª—è, —Ç—Ä*—Ö–Ω–∏ –º–µ–Ω—è, –ö–æ–ª—è\n"
                                               "–¢—ã –º–æ—è –≤—Å–µ–ª–µ–Ω–Ω–∞—è, —è –Ω–µ –º–æ–≥—É –±–µ–∑ —Ç–µ–±—è\n"
                                               "–Ø —Ö–æ—á—É, —Ö–æ—á—É —Ç–µ–±—è, –ö–æ–æ–ª—è\n")

    elif message.text == 'üòÇ –†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç':
        bot.send_message(message.from_user.id, "–°–∏–¥–∏—Ç –º—É–∂–∏–∫ –≤ –∫–∞—Ñ–µ. –í—ã–ø–∏–≤–∞–µ—Ç. –ú–∏–º–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç –º–æ–Ω–∞—à–∫–∞. –õ–æ–≤–∏—Ç –≤–∑–≥–ª—è–¥ –º—É–∂–∏–∫–∞ –∏ –≥–æ–≤–æ—Ä–∏—Ç —É–∫–æ—Ä–∏–∑–Ω–µ–Ω–Ω–æ:\n"
                                               "‚Äî –ö–∞–∫ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–∂–∏–≥–∞—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å –≤ —ç—Ç–æ–º –ø—Ä–∏—Å—Ç–∞–Ω–∏—â–µ –±–ª—É–¥–∞ –∏ —Ä–∞–∑–≤—Ä–∞—Ç–∞!\n"
                                               "‚Äî –î–∞ –Ω–µ—Ç —Ç—É—Ç –Ω–∏–∫–∞–∫–æ–≥–æ —Ä–∞–∑–≤—Ä–∞—Ç–∞, —Å–µ—Å—Ç—Ä–∞‚Ä¶\n"
                                               "‚Ä¶ –õ–∏–∑–∞, ‚Äî –≥–Ω–µ–≤–Ω–æ –æ—Ç–≤–µ—á–∞–µ—Ç –º–æ–Ω–∞—à–∫–∞.\n"
                                               "‚Äî –î–∞, –õ–∏–∑–∞. –í—Å–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –Ø –ø—Ä–æ—Å—Ç–æ –ø—å—é.\n"
                                               "‚Äî –ò —ç—Ç–æ –ø—Ä–æ—Ç–∏–≤–Ω–æ –ì–æ—Å–ø–æ–¥—É, ‚Äî –≥–æ–≤–æ—Ä–∏—Ç –º–æ–Ω–∞—à–∫–∞.\n"
                                               "‚Äî –ê —Ç—ã —Å–∞–º–∞-—Ç–æ, —Å–µ—Å—Ç—Ä–∞ –õ–∏–∑–∞, –ø—Ä–æ–±–æ–≤–∞–ª–∞ —Ö–æ—Ç—å —Ä–∞–∑? ‚Äî —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –º—É–∂–∏–∫.\n"
                                               "‚Äî –ù–µ—Ç! ‚Äî –≤–æ–∑–º—É—â–µ–Ω–Ω–æ –≤–æ—Å–∫–ª–∏—Ü–∞–µ—Ç –º–æ–Ω–∞—à–∫–∞.\n"
                                               "‚Äî –ö–∞–∫ –∂–µ —Ç—ã –º–æ–∂–µ—à—å —É—Ç–≤–µ—Ä–∂–¥–∞—Ç—å? ‚Äî —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –º—É–∂–∏–∫. ‚Äî –í–æ—Ç, —è —Å–µ–π—á–∞—Å –∫—É–ø–ª—é —Ç–µ–±–µ –≤—ã–ø–∏–≤–∫—É, –∏ —Ç—ã –ø–æ–ø—Ä–æ–±—É–µ—à—å‚Ä¶\n"
                                               "‚Äî –ù–∏–∫–æ–≥–¥–∞! –ß—Ç–æ–±—ã –ª—é–¥–∏ —É–≤–∏–¥–µ–ª–∏, –∫–∞–∫ –º–æ–Ω–∞—à–∫–∞ –ø—å–µ—Ç —Å–ø–∏—Ä—Ç–Ω–æ–µ?\n"
                                               "‚Äî –Ø –ø–æ–ø—Ä–æ—à—É, —á—Ç–æ–±—ã —Ç–µ–±–µ –Ω–∞–ª–∏–ª–∏ –≤ –∫–æ—Ñ–µ–π–Ω—É—é —á–∞—à–∫—É, ‚Äî –≥–æ–≤–æ—Ä–∏—Ç –º—É–∂–∏–∫.\n"
                                               "–ú–æ–Ω–∞—à–∫–∞ –Ω–µ–æ—Ö–æ—Ç–Ω–æ —Å–æ–≥–ª–∞—à–∞–µ—Ç—Å—è. –ú—É–∂–∏–∫ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ —Å—Ç–æ–π–∫–µ –∏ –≥–æ–≤–æ—Ä–∏—Ç:\n"
                                               "‚Äî –°–ª—ã—à—å, –¥–∞–π –º–Ω–µ –¥–≤–∞ —Å—Ç–∞–∫–∞–Ω–∞ –≤–æ–¥–∫–∏, –Ω–æ –æ–¥–∏–Ω –Ω–∞–ª–µ–π –≤ –∫–æ—Ñ–µ–π–Ω—É—é —á–∞—à–∫—É.\n"
                                               "–ë–∞—Ä–º–µ–Ω –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç—Å—è:\n"
                                               "‚Äî –¢–∞–º —Å–ª—É—á–∞–π–Ω–æ –Ω–µ —Å–µ—Å—Ç—Ä–∞ –õ–∏–∑–∞?..", parse_mode='html')

    elif message.text in toxic_list.values():
        bot.send_message(message.chat.id, f"{message.from_user.first_name} {message.text}", parse_mode='html')

    elif message.text == command['id']:
        bot.send_message(message.chat.id, f"–¢–≤–æ–π ID: {message.from_user.id}", parse_mode='html')

    elif message.text == command['photo']:
        photo = open('photo/test.jpg', 'rb')
        bot.send_photo(message.chat.id, photo)


bot.polling(none_stop=True)